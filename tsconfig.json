{
  "references": [
    {
      "path": "./tsconfig.app.json"
    },
    {
      "path": "./tsconfig.node.json"
    }
  ],
  "compilerOptions": {
    "target": "esnext",//指定生成的 JavaScript 代码的版本，esnext 表示最新的 ECMAScript 标准。
    "useDefineForClassFields": true,//使用特定的方式处理类的字段
    "module": "esnext",//指定模块的类型，esnext 通常用于支持最新的模块特性
    "moduleResolution": "node",//指定模块解析策略，node 遵循 Node.js 的模块解析规则
    "strict": true,//启用严格类型检查模式
    "noLib": false,//不包含默认的库声明
    "sourceMap": true,//生成源映射，便于调试
    "resolveJsonModule": true,//允许导入 .json 文件作为模块
    "esModuleInterop": true,//启用一些与 ES 模块互操作的特性
    "lib": ["esnext", "dom"],//指定要包含的类型定义库
    "baseUrl": ".",//设置基础路径，用于模块解析
    "allowJs": true,//允许编译 .js 文件
    "skipLibCheck": true,//跳过对库声明文件的类型检查
    "allowSyntheticDefaultImports": true,//允许合成的默认导入
    "forceConsistentCasingInFileNames": true,//强制文件名的大小写一致性
    "jsx": "preserve",
    "jsxFactory": "h",
    "jsxFragmentFactory": "Fragment",
    "paths": {
      "@/*": ["src/*"]
    },
    "types": [//指定要包含的额外类型声明
      "vite/client",
      "element-plus/global",
      "unplugin-icons/types/vue",
      "vite-plugin-svg-icons/client",
    ]
  },
  "include": [//指定需要被 TypeScript 编译器处理的文件或文件夹
    "mock/**/*.ts",
    "src/**/*.ts",
    "src/**/*.vue",
    "vite.config.ts"
  ],
  "exclude": [//指定要排除在编译之外的文件或文件夹
    "node_modules",
    "dist",
    "**/*.js",
  ]
}
